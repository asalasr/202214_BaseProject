{
	"info": {
		"_postman_id": "5568d239-5d13-438f-b03e-ef0c8e37a592",
		"name": "socio",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15372972"
	},
	"item": [
		{
			"name": "Crear un socio valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"socio_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"10-01-1965\"\n }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				},
				"description": "This request creates a new museum. The API returns the created resource with the assigned ID."
			},
			"response": [
				{
					"name": "Crear un socio valido",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1965/01/01\"\n }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1965/01/01\",\n    \"id\": \"e57203ce-5c1d-4790-b795-ae0acee81f4f\"\n}"
				}
			]
		},
		{
			"name": "Crear un socio no valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"    pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El email no es valido\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardilagmail.com\",\n    \"fechaNacimiento\": \"10-01-1965\"\n }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				},
				"description": "This request creates a new museum. The API returns the created resource with the assigned ID."
			},
			"response": [
				{
					"name": "Crear un socio no valido",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardilagmail.com\",\n    \"fechaNacimiento\": \"1965/01/01\"\n }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El email no es valido\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los socios",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "Obtener todos los socios",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"e57203ce-5c1d-4790-b795-ae0acee81f4f\",\n        \"nombre\": \"Ardila lule\",\n        \"email\": \"ardila@gmail.com\",\n        \"fechaNacimiento\": \"1965/01/01\",\n        \"club\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un socio por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"e57203ce-5c1d-4790-b795-ae0acee81f4f\",\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1965/01/01\",\n    \"club\": []\n}"
				}
			]
		},
		{
			"name": "Obtener un socio por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID ingresado no se encuentra\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio por un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El socio con el ID ingresado no se encuentra\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un socio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1969/01/01\"\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un socio",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1969/01/01\"\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1969/01/01\",\n    \"id\": \"e57203ce-5c1d-4790-b795-ae0acee81f4f\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un socio con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID ingresado no se encuentra\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1969/01/01\"\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un socio con un ID que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1969/01/01\"\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El socio con el ID ingresado no se encuentra\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un socio por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio por su ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un socio con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID ingresado no se encuentra\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio con un ID que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El socio con el ID ingresado no se encuentra\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "socio_id",
			"value": "e43ab4f5-ff6b-4503-b2ef-f90f27db6d1e",
			"type": "string"
		}
	]
}