{
	"info": {
		"_postman_id": "9b5f48f9-3b25-4fd7-af16-f9e7d944e978",
		"name": "asociacionClub-Socio",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15372972"
	},
	"item": [
		{
			"name": "Agregar un socio a un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar un socio a un club",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"a0e95e44-4606-457c-b44d-c01309be4031\",\n    \"nombre\": \"Club el Nogal\",\n    \"fechaFundacion\": \"10-01-1935\",\n    \"imagen\": \"https://upload.wikimedia.org/wikipedia/commons/0/01/2018_Bogot%C3%A1_club_El_Nogal.jpg\",\n    \"descripcion\": \"Una descripcion de historia del nogal\",\n    \"socio\": [\n        {\n            \"id\": \"6f30cd9c-4357-41ba-8255-a9a855988dcf\",\n            \"nombre\": \"Ardila lule\",\n            \"email\": \"ardila@gmail.com\",\n            \"fechaNacimiento\": \"1965/01/01\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Asociar un socio que no existe a un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID no se encuentra\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Asociar un socio que no existe a un club",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El socio con el ID no se encuentra\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los socios de un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los socios de un club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"6f30cd9c-4357-41ba-8255-a9a855988dcf\",\n        \"nombre\": \"Ardila lule\",\n        \"email\": \"ardila@gmail.com\",\n        \"fechaNacimiento\": \"1965/01/01\"\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un socio que pertenece a un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio que pertenece a un club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"6f30cd9c-4357-41ba-8255-a9a855988dcf\",\n    \"nombre\": \"Ardila lule\",\n    \"email\": \"ardila@gmail.com\",\n    \"fechaNacimiento\": \"1965/01/01\"\n}"
				}
			]
		},
		{
			"name": "Obtener un socio que no es parte un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID no esta asociado con un club\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/ce16ad1b-8c5b-4523-99cd-c18babdf2b95",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"ce16ad1b-8c5b-4523-99cd-c18babdf2b95"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio que no es parte un club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/ce16ad1b-8c5b-4523-99cd-c18babdf2b95",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"ce16ad1b-8c5b-4523-99cd-c18babdf2b95"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El socio con el ID no esta asociado con un club\"\n}"
				}
			]
		},
		{
			"name": "Actualizar los socios que pertenecen a un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{socio_id2}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar los socios que pertenecen a un club",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{socio_id2}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"a0e95e44-4606-457c-b44d-c01309be4031\",\n    \"nombre\": \"Club el Nogal\",\n    \"fechaFundacion\": \"10-01-1935\",\n    \"imagen\": \"https://upload.wikimedia.org/wikipedia/commons/0/01/2018_Bogot%C3%A1_club_El_Nogal.jpg\",\n    \"descripcion\": \"Una descripcion de historia del nogal\",\n    \"socio\": [\n        {\n            \"id\": \"6f30cd9c-4357-41ba-8255-a9a855988dcf\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Actualizar los socios de un club, con un socio inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El socio con el ID no se encuentra\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar los socios de un club, con un socio inexistente",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El socio con el ID no se encuentra\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un socio que es parte de un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"{{socio_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio que es parte de un club",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/{{socio_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{socio_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un socio que no es parte de un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El producto con el ID no esta asociado con un club\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clubs/{{club_id}}/members/ce16ad1b-8c5b-4523-99cd-c18babdf2b95",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clubs",
						"{{club_id}}",
						"members",
						"ce16ad1b-8c5b-4523-99cd-c18babdf2b95"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio que no es parte de un club",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{club_id}}/members/ce16ad1b-8c5b-4523-99cd-c18babdf2b95",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"ce16ad1b-8c5b-4523-99cd-c18babdf2b95"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El producto con el ID no esta asociado con un club\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "club_id",
			"value": "a0e95e44-4606-457c-b44d-c01309be4031",
			"type": "string"
		},
		{
			"key": "socio_id",
			"value": "6f30cd9c-4357-41ba-8255-a9a855988dcf",
			"type": "string"
		},
		{
			"key": "socio_id2",
			"value": "6f30cd9c-4357-41ba-8255-a9a855988dcf",
			"type": "string"
		}
	]
}